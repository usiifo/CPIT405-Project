{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // For API requests\nimport \"../style/HomePage.css\"; // Assuming your styles are already set\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HUGGING_FACE_API_URL = \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\";\nconst API_TOKEN = \"YOUR_HUGGING_FACE_TOKEN\"; // Replace with your Hugging Face token\n\nconst Home = ({\n  setSearchTerm,\n  setMovies,\n  setCurrentPage,\n  setTotalResults\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\"); // User input\n  const [messages, setMessages] = useState([]); // Chat history\n  const navigate = useNavigate(); // Navigation for your app\n\n  // Function to handle chatbot messages\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Append user's message to the chat\n    const userMessage = {\n      user: \"user\",\n      text: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await axios.post(HUGGING_FACE_API_URL, {\n        inputs: input\n      },\n      // User's input as payload\n      {\n        headers: {\n          Authorization: `Bearer ${API_TOKEN}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Append bot's response to the chat\n      const botMessage = {\n        user: \"bot\",\n        text: response.data.generated_text\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Error communicating with Hugging Face API:\", error);\n      setMessages(prevMessages => [...prevMessages, {\n        user: \"bot\",\n        text: \"Failed to get a response. Please try again.\"\n      }]);\n    }\n    setInput(\"\"); // Clear input field\n  };\n\n  // Your existing handleSubmit for OMDB API\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSearchTerm(input);\n    setCurrentPage(1);\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?apikey=a4bd042c&s=${input}&page=1`);\n      setMovies(response.data.Search || []);\n      setTotalResults(response.data.totalResults);\n      navigate(\"/searchResults\");\n    } catch (error) {\n      console.error(\"Error fetching movies from OMDB API:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Every movie has a story, and every story finds its home here at Movie Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Search for Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      style: {\n        marginTop: \"20px\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat with Hugging Face\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        style: {\n          height: \"200px\",\n          overflowY: \"auto\",\n          marginBottom: \"10px\",\n          padding: \"5px\"\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.user === \"bot\" ? \"left\" : \"right\",\n            margin: \"5px 0\",\n            color: msg.user === \"bot\" ? \"blue\" : \"green\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.user === \"bot\" ? \"Bot: \" : \"You: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message\",\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\",\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: {\n          width: \"100%\",\n          padding: \"10px\"\n        },\n        children: \"Send to Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Jc0BOCIiMTntW8gRQI9ajI8DC9w=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","HUGGING_FACE_API_URL","API_TOKEN","Home","setSearchTerm","setMovies","setCurrentPage","setTotalResults","_s","input","setInput","messages","setMessages","navigate","handleSendMessage","trim","userMessage","user","text","prevMessages","response","post","inputs","headers","Authorization","botMessage","data","generated_text","error","console","handleSubmit","e","preventDefault","get","Search","totalResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","style","marginTop","border","padding","height","overflowY","marginBottom","map","msg","index","textAlign","margin","color","width","onClick","_c","$RefreshReg$"],"sources":["/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // For API requests\r\nimport \"../style/HomePage.css\"; // Assuming your styles are already set\r\n\r\nconst HUGGING_FACE_API_URL = \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\";\r\nconst API_TOKEN = \"YOUR_HUGGING_FACE_TOKEN\"; // Replace with your Hugging Face token\r\n\r\nconst Home = ({ setSearchTerm, setMovies, setCurrentPage, setTotalResults }) => {\r\n    const [input, setInput] = useState(\"\"); // User input\r\n    const [messages, setMessages] = useState([]); // Chat history\r\n    const navigate = useNavigate(); // Navigation for your app\r\n\r\n    // Function to handle chatbot messages\r\n    const handleSendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        // Append user's message to the chat\r\n        const userMessage = { user: \"user\", text: input };\r\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                HUGGING_FACE_API_URL,\r\n                { inputs: input }, // User's input as payload\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${API_TOKEN}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                }\r\n            );\r\n\r\n            // Append bot's response to the chat\r\n            const botMessage = { user: \"bot\", text: response.data.generated_text };\r\n            setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n        } catch (error) {\r\n            console.error(\"Error communicating with Hugging Face API:\", error);\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                { user: \"bot\", text: \"Failed to get a response. Please try again.\" },\r\n            ]);\r\n        }\r\n\r\n        setInput(\"\"); // Clear input field\r\n    };\r\n\r\n    // Your existing handleSubmit for OMDB API\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setSearchTerm(input);\r\n        setCurrentPage(1);\r\n\r\n        try {\r\n            const response = await axios.get(`http://www.omdbapi.com/?apikey=a4bd042c&s=${input}&page=1`);\r\n            setMovies(response.data.Search || []);\r\n            setTotalResults(response.data.totalResults);\r\n            navigate(\"/searchResults\");\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies from OMDB API:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1>Every movie has a story, and every story finds its home here at Movie Home</h1>\r\n\r\n            {/* Movie Search Form */}\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Search for Movies\"\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n\r\n            {/* Chat Section */}\r\n            <div className=\"chat-container\" style={{ marginTop: \"20px\", border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                <h2>Chat with Hugging Face</h2>\r\n                <div\r\n                    className=\"chat-messages\"\r\n                    style={{ height: \"200px\", overflowY: \"auto\", marginBottom: \"10px\", padding: \"5px\" }}\r\n                >\r\n                    {messages.map((msg, index) => (\r\n                        <div\r\n                            key={index}\r\n                            style={{\r\n                                textAlign: msg.user === \"bot\" ? \"left\" : \"right\",\r\n                                margin: \"5px 0\",\r\n                                color: msg.user === \"bot\" ? \"blue\" : \"green\",\r\n                            }}\r\n                        >\r\n                            <strong>{msg.user === \"bot\" ? \"Bot: \" : \"You: \"}</strong>\r\n                            {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Type a message\"\r\n                    style={{ width: \"100%\", marginBottom: \"10px\", padding: \"5px\" }}\r\n                />\r\n                <button onClick={handleSendMessage} style={{ width: \"100%\", padding: \"10px\" }}>\r\n                    Send to Chatbot\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}