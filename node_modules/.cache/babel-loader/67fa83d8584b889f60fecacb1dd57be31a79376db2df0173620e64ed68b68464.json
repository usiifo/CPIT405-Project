{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/MovieManAI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MovieManAI.css'; // Add styles in a separate CSS file (optional)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieManAI = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse(''); // Clear previous responses\n\n    // Simulate an AI response (can be replaced with an actual API call or logic)\n    setTimeout(() => {\n      setLoading(false);\n      setResponse(`You asked about: \"${userInput}\". I will get some movie info for you soon!`);\n    }, 1000); // Simulate a delay in getting the response\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-man-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to MovieMan!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your AI assistant for movies: Get descriptions, rankings, and more!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: handleInputChange,\n          placeholder: \"Ask me about a movie...\",\n          className: \"chat-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-button\",\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-response\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) // Display loading state while waiting for response\n        : response && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this) // Display the response after getting it\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieManAI, \"encc2ILpPbmxkDmqdY1TGlEC5c8=\");\n_c = MovieManAI;\nexport default MovieManAI;\nvar _c;\n$RefreshReg$(_c, \"MovieManAI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MovieManAI","_s","userInput","setUserInput","response","setResponse","loading","setLoading","handleInputChange","e","target","value","handleSubmit","preventDefault","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/MovieManAI.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MovieManAI.css';  // Add styles in a separate CSS file (optional)\n\nconst MovieManAI = () => {\n  const [userInput, setUserInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse(''); // Clear previous responses\n\n    // Simulate an AI response (can be replaced with an actual API call or logic)\n    setTimeout(() => {\n      setLoading(false);\n      setResponse(`You asked about: \"${userInput}\". I will get some movie info for you soon!`);\n    }, 1000);  // Simulate a delay in getting the response\n    setUserInput('');\n  };\n\n  return (\n    <div className=\"movie-man-container\">\n      <h1>Welcome to MovieMan!</h1>\n      <p>Your AI assistant for movies: Get descriptions, rankings, and more!</p>\n      \n      <div className=\"chat-container\">\n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\" \n            value={userInput} \n            onChange={handleInputChange} \n            placeholder=\"Ask me about a movie...\" \n            className=\"chat-input\"\n            required\n          />\n          <button type=\"submit\" className=\"chat-button\">Ask</button>\n        </form>\n\n        <div className=\"chat-response\">\n          {loading ? (\n            <p>Loading...</p>  // Display loading state while waiting for response\n          ) : (\n            response && <p>{response}</p>  // Display the response after getting it\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieManAI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}