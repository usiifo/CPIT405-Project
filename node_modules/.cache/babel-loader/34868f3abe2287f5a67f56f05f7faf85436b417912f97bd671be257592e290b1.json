{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Link, useLocation } from 'react-router-dom'; // useLocation: it allows to access the current location and pass the state to that location, for example when i go to the details page and then go back to the previous page. \nimport '../style/SearchResults.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"a4bd042c\";\nconst SearchResults = ({\n  setMovies,\n  setCurrentPage,\n  currentPage,\n  totalResults,\n  favorites,\n  setFavorites\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    movies = [],\n    searchTerm,\n    mood\n  } = location.state || {}; // Ensure default empty array if movies is undefined\n  const totalPages = Math.ceil(totalResults / 10); // Rounded up to the nearest integer\n\n  useEffect(() => {\n    if (location.state) {\n      setCurrentPage(location.state.currentPage);\n      setMovies(location.state.movies || []);\n    }\n  }, [location.state, setMovies, setCurrentPage]);\n  const handlePageChange = async page => {\n    const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${searchTerm}&page=${page}`);\n    setMovies(response.data.Search || []);\n    setCurrentPage(page);\n  };\n  const handleFavorite = movie => {\n    if (favorites.some(fav => fav.imdbID === movie.imdbID)) {\n      setFavorites(favorites.filter(fav => fav.imdbID !== movie.imdbID));\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-container\",\n    children: [searchTerm && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search results for \\\"\", searchTerm, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }, this), mood && !searchTerm && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Movies for mood: \\\"\", mood, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results-grid\",\n      children: movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/moviesDetails/${movie.imdbID}`,\n          state: {\n            searchTerm,\n            movies,\n            currentPage\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.Year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"favorite-button\",\n          onClick: () => handleFavorite(movie),\n          children: favorites.some(fav => fav.imdbID === movie.imdbID) ? \"Remove from Favorites\" : \"Add to Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: searchTerm ? \"No results found for this search.\" : \"No movies found for this mood. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResults, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","Link","useLocation","axios","jsxDEV","_jsxDEV","apikey","SearchResults","setMovies","setCurrentPage","currentPage","totalResults","favorites","setFavorites","_s","location","movies","searchTerm","mood","state","totalPages","Math","ceil","handlePageChange","page","response","get","data","Search","handleFavorite","movie","some","fav","imdbID","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","to","src","Poster","alt","Title","Year","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/SearchResults.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {Link, useLocation} from 'react-router-dom';  // useLocation: it allows to access the current location and pass the state to that location, for example when i go to the details page and then go back to the previous page. \r\nimport '../style/SearchResults.css';\r\nimport axios from 'axios';\r\nconst apikey = \"a4bd042c\";\r\n\r\n\r\nconst SearchResults = ({ setMovies, setCurrentPage, currentPage, totalResults, favorites, setFavorites }) => {\r\n    const location = useLocation();\r\n    \r\n    const { movies = [], searchTerm, mood } = location.state || {}; // Ensure default empty array if movies is undefined\r\n    const totalPages = Math.ceil(totalResults / 10); // Rounded up to the nearest integer\r\n\r\n    useEffect(() => {\r\n        if (location.state) {\r\n            setCurrentPage(location.state.currentPage);\r\n            setMovies(location.state.movies || []);\r\n        }\r\n    }, [location.state, setMovies, setCurrentPage]);\r\n\r\n    const handlePageChange = async (page) => {\r\n        const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${searchTerm}&page=${page}`);\r\n        setMovies(response.data.Search || []);\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const handleFavorite = (movie) => {\r\n        if (favorites.some((fav) => fav.imdbID === movie.imdbID)) {\r\n            setFavorites(favorites.filter((fav) => fav.imdbID !== movie.imdbID));\r\n        } else {\r\n            setFavorites([...favorites, movie]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-results-container\">\r\n            {/* Display message based on searchTerm or mood */}\r\n            {searchTerm && <h2>Search results for \"{searchTerm}\"</h2>}\r\n            {mood && !searchTerm && <h2>Movies for mood: \"{mood}\"</h2>} {/* Only show mood if no searchTerm */}\r\n\r\n            <div className=\"search-results-grid\">\r\n                {/* Check if movies is populated */}\r\n                {movies.length > 0 ? (\r\n                    movies.map((movie) => (\r\n                        <div key={movie.imdbID} className=\"movie-card\">\r\n                            <Link to={`/moviesDetails/${movie.imdbID}`} state={{ searchTerm, movies, currentPage }}>\r\n                                <img src={movie.Poster} alt={movie.Title} />\r\n                                <div className=\"p-4\">\r\n                                    <h2>{movie.Title}</h2>\r\n                                    <p>{movie.Year}</p>\r\n                                </div>\r\n                            </Link>\r\n                            <button\r\n                                className=\"favorite-button\"\r\n                                onClick={() => handleFavorite(movie)}\r\n                            >\r\n                                {favorites.some((fav) => fav.imdbID === movie.imdbID)\r\n                                    ? \"Remove from Favorites\"\r\n                                    : \"Add to Favorites\"}\r\n                            </button>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>{searchTerm ? \"No results found for this search.\" : \"No movies found for this mood. Please try again later.\"}</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Pagination buttons */}\r\n            <div className=\"pagination\">\r\n                <button\r\n                    onClick={() => handlePageChange(currentPage - 1)}\r\n                    disabled={currentPage === 1}\r\n                >\r\n                    Previous\r\n                </button>\r\n\r\n                <button\r\n                    onClick={() => handlePageChange(currentPage + 1)}\r\n                    disabled={currentPage === totalPages}\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}