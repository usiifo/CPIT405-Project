{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../style/HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"a4bd042c\";\nconst openAiApiKey = \"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\"; // Replace with your OpenAI API key\n\nconst Home = ({\n  setSearchTerm,\n  setMovies,\n  setCurrentPage,\n  setTotalResults\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSearchTerm(input);\n    setCurrentPage(1);\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${input}&page=1`);\n      setMovies(response.data.Search || []);\n      setTotalResults(response.data.totalResults || 0);\n      // Navigate to SearchResults page and pass the necessary data\n      navigate(\"/searchResults\", {\n        state: {\n          searchTerm: input,\n          movies: response.data.Search || [],\n          totalResults: response.data.totalResults || 0,\n          currentPage: 1\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n      alert(\"Failed to fetch movies. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Every movie has a story, and every story finds its home here at Movie Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Search for Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"aAKo61i2tRZgmY/cBQlT0LVwTmM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Library to fetch data from APIs\r\nimport \"../style/HomePage.css\";\r\n\r\nconst apikey = \"a4bd042c\";\r\nconst openAiApiKey = \"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\";\r\n\r\nconst Home = ({ setSearchTerm, setMovies, setCurrentPage, setTotalResults }) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const navigate = useNavigate(); // To navigate between pages\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setSearchTerm(input);\r\n        setCurrentPage(1);\r\n        try {\r\n            const response = await axios.get(\r\n                `http://www.omdbapi.com/?apikey=${apikey}&s=${input}&page=1`\r\n            );\r\n            setMovies(response.data.Search || []);\r\n            setTotalResults(response.data.totalResults || 0);\r\n            navigate(\"/searchResults\");\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n            alert(\"Failed to fetch movies. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleChatGPTQuery = async (query) => {\r\n        try {\r\n            const response = await axios.post(\r\n                \"https://api.openai.com/v1/chat/completions\",\r\n                {\r\n                    model: \"gpt-3.5-turbo\", // Or \"gpt-4\" if available\r\n                    messages: [{ role: \"user\", content: query }],\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${openAiApiKey}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            // Log the response for debugging\r\n            console.log(\"ChatGPT Response:\", response.data);\r\n\r\n            const chatResponse = response.data.choices?.[0]?.message?.content?.trim();\r\n            if (!chatResponse) {\r\n                throw new Error(\"No valid response received from ChatGPT.\");\r\n            }\r\n            return chatResponse;\r\n        } catch (error) {\r\n            console.error(\"Error interacting with ChatGPT API:\", error);\r\n            alert(\"Failed to get a response from ChatGPT. Please try again.\");\r\n            return \"No suggestion available.\";\r\n        }\r\n    };\r\n\r\n    const handleRandomMovie = async () => {\r\n        const randomWords = [\"love\", \"war\", \"life\", \"future\", \"star\", \"hero\"];\r\n        const randomWord = randomWords[Math.floor(Math.random() * randomWords.length)];\r\n        try {\r\n            const response = await axios.get(\r\n                `http://www.omdbapi.com/?apikey=${apikey}&s=${randomWord}`\r\n            );\r\n            const movies = response.data.Search;\r\n            if (movies && movies.length > 0) {\r\n                const randomMovie = movies[Math.floor(Math.random() * movies.length)];\r\n                navigate(`/moviesDetails/${randomMovie.imdbID}`, {\r\n                    state: { movie: randomMovie, searchTerm: randomWord, movies: movies },\r\n                });\r\n            } else {\r\n                alert(\"No random movie found. Try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching random movie:\", error);\r\n            alert(\"Failed to fetch a random movie. Try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1>Every movie has a story, and every story finds its home here at Movie Home</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Search for Movies\"\r\n                />\r\n                \r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n            <button onClick={handleRandomMovie} className=\"random-movie-button\">\r\n                Random Movie\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","apikey","openAiApiKey","Home","setSearchTerm","setMovies","setCurrentPage","setTotalResults","_s","input","setInput","navigate","handleSubmit","e","preventDefault","response","get","data","Search","totalResults","state","searchTerm","movies","currentPage","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\nimport axios from \"axios\";\r\nimport \"../style/HomePage.css\";\r\n\r\nconst apikey = \"a4bd042c\"; \r\nconst openAiApiKey = \"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\"; // Replace with your OpenAI API key\r\n\r\nconst Home = ({ setSearchTerm, setMovies, setCurrentPage, setTotalResults }) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setSearchTerm(input);\r\n        setCurrentPage(1);\r\n        try {\r\n            const response = await axios.get(\r\n                `http://www.omdbapi.com/?apikey=${apikey}&s=${input}&page=1`\r\n            );\r\n            setMovies(response.data.Search || []);\r\n            setTotalResults(response.data.totalResults || 0);\r\n            // Navigate to SearchResults page and pass the necessary data\r\n            navigate(\"/searchResults\", {\r\n                state: {\r\n                    searchTerm: input,\r\n                    movies: response.data.Search || [],\r\n                    totalResults: response.data.totalResults || 0,\r\n                    currentPage: 1,\r\n                },\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n            alert(\"Failed to fetch movies. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1>Every movie has a story, and every story finds its home here at Movie Home</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Search for Movies\"\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Library to fetch data from APIs\r\nimport \"../style/HomePage.css\";\r\n\r\nconst apikey = \"a4bd042c\";\r\nconst openAiApiKey = \"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\";\r\n\r\nconst Home = ({ setSearchTerm, setMovies, setCurrentPage, setTotalResults }) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const navigate = useNavigate(); // To navigate between pages\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setSearchTerm(input);\r\n        setCurrentPage(1);\r\n        try {\r\n            const response = await axios.get(\r\n                `http://www.omdbapi.com/?apikey=${apikey}&s=${input}&page=1`\r\n            );\r\n            setMovies(response.data.Search || []);\r\n            setTotalResults(response.data.totalResults || 0);\r\n            navigate(\"/searchResults\");\r\n        } catch (error) {\r\n            console.error(\"Error fetching movies:\", error);\r\n            alert(\"Failed to fetch movies. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleChatGPTQuery = async (query) => {\r\n        try {\r\n            const response = await axios.post(\r\n                \"https://api.openai.com/v1/chat/completions\",\r\n                {\r\n                    model: \"gpt-3.5-turbo\", // Or \"gpt-4\" if available\r\n                    messages: [{ role: \"user\", content: query }],\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${openAiApiKey}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            // Log the response for debugging\r\n            console.log(\"ChatGPT Response:\", response.data);\r\n\r\n            const chatResponse = response.data.choices?.[0]?.message?.content?.trim();\r\n            if (!chatResponse) {\r\n                throw new Error(\"No valid response received from ChatGPT.\");\r\n            }\r\n            return chatResponse;\r\n        } catch (error) {\r\n            console.error(\"Error interacting with ChatGPT API:\", error);\r\n            alert(\"Failed to get a response from ChatGPT. Please try again.\");\r\n            return \"No suggestion available.\";\r\n        }\r\n    };\r\n\r\n    const handleRandomMovie = async () => {\r\n        const randomWords = [\"love\", \"war\", \"life\", \"future\", \"star\", \"hero\"];\r\n        const randomWord = randomWords[Math.floor(Math.random() * randomWords.length)];\r\n        try {\r\n            const response = await axios.get(\r\n                `http://www.omdbapi.com/?apikey=${apikey}&s=${randomWord}`\r\n            );\r\n            const movies = response.data.Search;\r\n            if (movies && movies.length > 0) {\r\n                const randomMovie = movies[Math.floor(Math.random() * movies.length)];\r\n                navigate(`/moviesDetails/${randomMovie.imdbID}`, {\r\n                    state: { movie: randomMovie, searchTerm: randomWord, movies: movies },\r\n                });\r\n            } else {\r\n                alert(\"No random movie found. Try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching random movie:\", error);\r\n            alert(\"Failed to fetch a random movie. Try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1>Every movie has a story, and every story finds its home here at Movie Home</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Search for Movies\"\r\n                />\r\n                \r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n            <button onClick={handleRandomMovie} className=\"random-movie-button\">\r\n                Random Movie\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,MAAM,GAAG,UAAU;AACzB,MAAMC,YAAY,GAAG,sKAAsK,CAAC,CAAC;;AAE7L,MAAMC,IAAI,GAAGA,CAAC;EAAEC,aAAa;EAAEC,SAAS;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBV,aAAa,CAACK,KAAK,CAAC;IACpBH,cAAc,CAAC,CAAC,CAAC;IACjB,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC5B,kCAAkCf,MAAM,MAAMQ,KAAK,SACvD,CAAC;MACDJ,SAAS,CAACU,QAAQ,CAACE,IAAI,CAACC,MAAM,IAAI,EAAE,CAAC;MACrCX,eAAe,CAACQ,QAAQ,CAACE,IAAI,CAACE,YAAY,IAAI,CAAC,CAAC;MAChD;MACAR,QAAQ,CAAC,gBAAgB,EAAE;QACvBS,KAAK,EAAE;UACHC,UAAU,EAAEZ,KAAK;UACjBa,MAAM,EAAEP,QAAQ,CAACE,IAAI,CAACC,MAAM,IAAI,EAAE;UAClCC,YAAY,EAAEJ,QAAQ,CAACE,IAAI,CAACE,YAAY,IAAI,CAAC;UAC7CI,WAAW,EAAE;QACjB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CE,KAAK,CAAC,2CAA2C,CAAC;IACtD;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B5B,OAAA;MAAA4B,QAAA,EAAI;IAA0E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnFhC,OAAA;MAAMiC,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBACzB5B,OAAA;QACIkC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGvB,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAmB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFhC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACxB,EAAA,CA3CIL,IAAI;EAAA,QAEWN,WAAW;AAAA;AAAA0C,EAAA,GAF1BpC,IAAI;AA6CV,eAAeA,IAAI;;AAKnvGA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}