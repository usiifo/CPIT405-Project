{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/MoodResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"your_omdb_api_key\"; // OMDB API key\nconst openAiApiKey = \"your_openai_api_key\"; // OpenAI API key\n\n// Fetch mood-based recommendations from ChatGPT\nconst getMoodBasedRecommendationsFromChatGPT = async mood => {\n  // Your logic for fetching mood-based recommendations\n};\n\n// Fetch movie details from OMDB API\nconst fetchMovieDetails = async movies => {\n  // Your logic for fetching movie details\n};\nconst MoodResults = () => {\n  _s();\n  const {\n    mood\n  } = useParams();\n  const [movies, setMovies] = useState([]);\n  const moodCache = useRef({}); // Cache for previously fetched results\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (moodCache.current[mood]) {\n        setMovies(moodCache.current[mood]);\n        return;\n      }\n      try {\n        const moodRecommendations = await getMoodBasedRecommendationsFromChatGPT(mood);\n        const movieDetails = await fetchMovieDetails(moodRecommendations);\n        const uniqueMovies = movieDetails.filter((movie, index, self) => self.findIndex(m => m.imdbID === movie.imdbID) === index);\n        moodCache.current[mood] = uniqueMovies;\n        setMovies(uniqueMovies);\n      } catch (error) {\n        console.error(\"Error fetching mood-based movies:\", error);\n      }\n    };\n    fetchMovies();\n  }, [mood]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Movies with mood: \", mood]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        onClick: () => navigate(`/moviesDetails/${movie.imdbID}`),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(MoodResults, \"YowxdEXhhW0RdVZpDBve6wr1MfE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MoodResults;\nexport default MoodResults;\nvar _c;\n$RefreshReg$(_c, \"MoodResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","axios","jsxDEV","_jsxDEV","apikey","openAiApiKey","getMoodBasedRecommendationsFromChatGPT","mood","fetchMovieDetails","movies","MoodResults","_s","setMovies","moodCache","navigate","fetchMovies","current","moodRecommendations","movieDetails","uniqueMovies","filter","movie","index","self","findIndex","m","imdbID","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","Poster","alt","Title","_c","$RefreshReg$"],"sources":["/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/MoodResults.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst apikey = \"your_omdb_api_key\"; // OMDB API key\nconst openAiApiKey = \"your_openai_api_key\"; // OpenAI API key\n\n// Fetch mood-based recommendations from ChatGPT\nconst getMoodBasedRecommendationsFromChatGPT = async (mood) => {\n    // Your logic for fetching mood-based recommendations\n};\n\n// Fetch movie details from OMDB API\nconst fetchMovieDetails = async (movies) => {\n    // Your logic for fetching movie details\n};\n\nconst MoodResults = () => {\n    const { mood } = useParams();\n    const [movies, setMovies] = useState([]);\n    const moodCache = useRef({}); // Cache for previously fetched results\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            if (moodCache.current[mood]) {\n                setMovies(moodCache.current[mood]);\n                return;\n            }\n            try {\n                const moodRecommendations = await getMoodBasedRecommendationsFromChatGPT(mood);\n                const movieDetails = await fetchMovieDetails(moodRecommendations);\n                const uniqueMovies = movieDetails.filter(\n                    (movie, index, self) => self.findIndex((m) => m.imdbID === movie.imdbID) === index\n                );\n                moodCache.current[mood] = uniqueMovies;\n                setMovies(uniqueMovies);\n            } catch (error) {\n                console.error(\"Error fetching mood-based movies:\", error);\n            }\n        };\n\n        fetchMovies();\n    }, [mood]);\n\n    return (\n        <div className=\"mood-results-container\">\n            <h2>Movies with mood: {mood}</h2>\n            <div className=\"movies-list\">\n                {movies.map((movie) => (\n                    <div\n                        key={movie.imdbID}\n                        className=\"movie-card\"\n                        onClick={() => navigate(`/moviesDetails/${movie.imdbID}`)}\n                    >\n                        <img src={movie.Poster} alt={movie.Title} />\n                        <h3>{movie.Title}</h3>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MoodResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}