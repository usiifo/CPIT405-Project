{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // library that fetch the data from the api\nimport '../style/HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apikey = \"a4bd042c\";\nconst Home = ({\n  setSearchTerm,\n  setMovies,\n  setCurrentPage,\n  setTotalResults\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const navigate = useNavigate(); //to nav from one page to another page\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSearchTerm(input);\n    setCurrentPage(1);\n    const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${input}&page=1`); //It will take user input and look it up in the api using the apikey.\n    setMovies(response.data.Search || []);\n    setTotalResults(response.data.totalResults); //Update data (movie, total results) according to user input\n    navigate('/searchResults'); // Go to searchResults page \n  };\n  const handleRandomMovie = async () => {\n    const randomWords = [\"love\", \"war\", \"life\", \"future\", \"star\", \"hero\"];\n    const randomWord = randomWords[Math.floor(Math.random() * randomWords.length)];\n    try {\n      const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${randomWord}`);\n      const movies = response.data.Search;\n      if (movies && movies.length > 0) {\n        const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n        navigate(`/moviesDetails/${randomMovie.imdbID}`, {\n          state: {\n            movie: randomMovie,\n            searchTerm: randomWord,\n            movies: movies\n          }\n        });\n      } else {\n        alert(\"No random movie found. Try again\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching random movie:\", error);\n      alert(\"Failed to fetch a random movie, Try again\");\n    }\n  };\n\n  // Home page layout\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Every movie has a story, and every story finds its home here at Movie Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Search for Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRandomMovie,\n      className: \"random-movie-button\",\n      children: \"Random Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"AuPX+awibUVdb9buQGCVkcII3I0=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","apikey","Home","setSearchTerm","setMovies","setCurrentPage","setTotalResults","_s","input","setInput","navigate","handleSubmit","e","preventDefault","response","get","data","Search","totalResults","handleRandomMovie","randomWords","randomWord","Math","floor","random","length","movies","randomMovie","imdbID","state","movie","searchTerm","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/abdulrahmanalharbi/Desktop/KAU/Term_8/CPIT405/Project/Movie-Home-Project/src/pages/Home.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport axios from 'axios'; // library that fetch the data from the api\r\nimport '../style/HomePage.css';\r\nconst apikey = \"a4bd042c\";\r\n\r\n\r\nconst Home = ({ setSearchTerm, setMovies, setCurrentPage, setTotalResults}) => {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const navigate = useNavigate(); //to nav from one page to another page\r\n\r\n    const handleSubmit =async (e) => {\r\n        e.preventDefault();\r\n        setSearchTerm(input);\r\n        setCurrentPage(1);\r\n        const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${input}&page=1`);  //It will take user input and look it up in the api using the apikey.\r\n        setMovies(response.data.Search || []);\r\n        setTotalResults(response.data.totalResults);                         //Update data (movie, total results) according to user input\r\n        navigate('/searchResults');                                          // Go to searchResults page \r\n    };\r\n\r\n    const handleRandomMovie = async () => {\r\n        const randomWords =[\"love\", \"war\", \"life\", \"future\", \"star\", \"hero\"];\r\n        const randomWord = randomWords[Math.floor(Math.random() * randomWords.length)];\r\n        try{\r\n            const response = await axios.get(`http://www.omdbapi.com/?apikey=${apikey}&s=${randomWord}`);\r\n\r\n            const movies = response.data.Search;\r\n            if(movies && movies.length > 0){\r\n                const randomMovie = movies[Math.floor(Math.random() * movies.length)];\r\n                navigate(`/moviesDetails/${randomMovie.imdbID}` , {state: {movie: randomMovie, searchTerm: randomWord, movies: movies} , });\r\n            }else{\r\n                alert(\"No random movie found. Try again\")\r\n            }\r\n       }catch(error){\r\n          console.error(\"Error fetching random movie:\", error);\r\n         alert(\"Failed to fetch a random movie, Try again\");\r\n    }\r\n    }\r\n\r\n    // Home page layout\r\n    return(\r\n        <div className=\"home-container\">\r\n            <h1>Every movie has a story, and every story finds its home here at Movie Home</h1>\r\n            <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Search for Movies\"\r\n            />\r\n\r\n            <button type=\"submit\">Search</button>\r\n            </form>\r\n            <button onClick={handleRandomMovie}\r\n            className=\"random-movie-button\"\r\n            >\r\n                Random Movie\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}